volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  
  production_redis_data: {}
  


services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/staging/django/Dockerfile

    image: forgotten_wells_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.staging/.django
      - ./.envs/.staging/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/staging/postgres/Dockerfile
    image: forgotten_wells_staging_postgres
    volumes:
      - staging_postgres_data:/var/lib/postgresql/data
      - staging_postgres_data_backups:/backups
    env_file:
      - ./.envs/.staging/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/staging/traefik/Dockerfile
    image: forgotten_wells_staging_traefik
    depends_on:
      - django
    volumes:
      - staging_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6
    
    volumes:
      - staging_redis_data:/data
    

  celeryworker:
    <<: *django
    image: forgotten_wells_staging_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: forgotten_wells_staging_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: forgotten_wells_staging_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/staging/aws/Dockerfile
    env_file:
      - ./.envs/.staging/.django
    volumes:
      - staging_postgres_data_backups:/backups:z
